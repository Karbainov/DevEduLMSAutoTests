// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AutoTestsSelenium.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class CheckWorkWithHomeworkFeature : object, Xunit.IClassFixture<CheckWorkWithHomeworkFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "CheckWorkWithHomework.feature"
#line hidden
        
        public CheckWorkWithHomeworkFeature(CheckWorkWithHomeworkFeature.FixtureData fixtureData, AutoTestsSelenium_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "CheckWorkWithHomework", "A short summary of the feature", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public void TestInitialize()
        {
        }
        
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Assigned homework by teacher, turned in by student")]
        [Xunit.TraitAttribute("FeatureTitle", "CheckWorkWithHomework")]
        [Xunit.TraitAttribute("Description", "Assigned homework by teacher, turned in by student")]
        [Xunit.TraitAttribute("Category", "teacher")]
        [Xunit.TraitAttribute("Category", "student")]
        [Xunit.TraitAttribute("Category", "manager")]
        public void AssignedHomeworkByTeacherTurnedInByStudent()
        {
            string[] tagsOfScenario = new string[] {
                    "teacher",
                    "student",
                    "manager"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Assigned homework by teacher, turned in by student", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table6.AddRow(new string[] {
                            "Ilya1",
                            "Baikov",
                            "string",
                            "ilya21@student.com",
                            "ilya",
                            "password",
                            "SaintPetersburg",
                            "02.07.2000",
                            "string",
                            "89817051890",
                            "Student"});
                table6.AddRow(new string[] {
                            "Lera",
                            "Puzikova",
                            "string",
                            "lera21@methodist.com",
                            "lera",
                            "password",
                            "SaintPetersburg",
                            "31.01.2000",
                            "string",
                            "89817051892",
                            "Methodist"});
                table6.AddRow(new string[] {
                            "Vitya",
                            "Strashko",
                            "string",
                            "vitya21@teacher.com",
                            "vitya",
                            "password",
                            "SaintPetersburg",
                            "01.08.1995",
                            "string",
                            "89817051893",
                            "Teacher"});
#line 7
    testRunner.Given("Register new users with roles", ((string)(null)), table6, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "CourseName",
                            "GroupStatusId",
                            "StartDate",
                            "EndDate",
                            "Timetable",
                            "PaymentPerMonth",
                            "PaymentsCount"});
                table7.AddRow(new string[] {
                            "GropForTest",
                            "Базовый C#",
                            "Forming",
                            "26.08.2022",
                            "26.08.2023",
                            "string",
                            "5000",
                            "10"});
#line 12
    testRunner.And("Create new groups", ((string)(null)), table7, "And ");
#line hidden
                TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Role"});
                table8.AddRow(new string[] {
                            "Vitya",
                            "Strashko",
                            "Teacher"});
                table8.AddRow(new string[] {
                            "Ilya1",
                            "Baikov",
                            "Student"});
#line 15
    testRunner.And("Add users to group \"GropForTest\"", ((string)(null)), table8, "And ");
#line hidden
#line 19
    testRunner.When("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table9.AddRow(new string[] {
                            "lera21@methodist.com",
                            "password"});
#line 20
    testRunner.And("Authorize user in service as methodist", ((string)(null)), table9, "And ");
#line hidden
#line 23
    testRunner.And("Methodist click button homework", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
    testRunner.And("Methodist click button add homework", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "Link"});
                table10.AddRow(new string[] {
                            "ЗаданиеЗадание",
                            "string",
                            "http://fjfjf.com"});
#line 25
    testRunner.And("Methodist create homework course name \"QA Automation\"", ((string)(null)), table10, "And ");
#line hidden
#line 28
    testRunner.And("Methodist logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table11.AddRow(new string[] {
                            "vitya21@teacher.com",
                            "password"});
#line 29
    testRunner.And("Authorize user in service as teacher", ((string)(null)), table11, "And ");
#line hidden
#line 32
    testRunner.And("Teacher lays out the task \"ЗаданиеЗадание\" created by the methodologist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "Link",
                            "StartDate",
                            "EndDate"});
                table12.AddRow(new string[] {
                            "ЗаданиеЗадание",
                            "сделай то то",
                            "http://fjfjf.com",
                            "30.09.2022",
                            "31.12.2022"});
#line 33
    testRunner.And("Teacher create issuing homework course name \"QA Automation\"", ((string)(null)), table12, "And ");
#line hidden
#line 36
    testRunner.Then("Teacher click button publish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 37
    testRunner.When("Teacher see all task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 38
    testRunner.And("Teacher logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table13.AddRow(new string[] {
                            "ilya21@student.com",
                            "password"});
#line 39
    testRunner.And("Authorize user in service as student", ((string)(null)), table13, "And ");
#line hidden
#line 42
    testRunner.And("Student click button homework", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
    testRunner.And("Studen click button to the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
    testRunner.And("Studen attaches a link \"https://hd.kinopoisk.ru/\" to the completed task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
    testRunner.And("Studen click airplane icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
    testRunner.And("Student logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table14.AddRow(new string[] {
                            "vitya21@teacher.com",
                            "password"});
#line 47
    testRunner.And("Authorize user in service as teacher", ((string)(null)), table14, "And ");
#line hidden
#line 50
    testRunner.And("Teacher checks homework", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
    testRunner.And("Teacher returned homework", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
    testRunner.And("Teacher logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table15.AddRow(new string[] {
                            "ilya21@student.com",
                            "password"});
#line 53
    testRunner.And("Authorize user in service as student", ((string)(null)), table15, "And ");
#line hidden
#line 56
    testRunner.And("Student attached link \"https://hd.kinopoisk.ru/\" of corrected homework", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
    testRunner.And("Student logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table16.AddRow(new string[] {
                            "vitya21@teacher.com",
                            "password"});
#line 58
    testRunner.And("Authorize user in service as teacher", ((string)(null)), table16, "And ");
#line hidden
#line 61
    testRunner.Then("Teacher accepted homework", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                CheckWorkWithHomeworkFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                CheckWorkWithHomeworkFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
