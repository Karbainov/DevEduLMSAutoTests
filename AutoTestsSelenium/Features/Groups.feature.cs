// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AutoTestsSelenium.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class GroupsFeature : object, Xunit.IClassFixture<GroupsFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "Groups.feature"
#line hidden
        
        public GroupsFeature(GroupsFeature.FixtureData fixtureData, AutoTestsSelenium_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Groups", "A short summary of the feature", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public void TestInitialize()
        {
        }
        
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager creates a group with a teacher and adds a student and the student checks " +
            "for the presence of a group")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "Manager creates a group with a teacher and adds a student and the student checks " +
            "for the presence of a group")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "teacher")]
        [Xunit.TraitAttribute("Category", "student")]
        [Xunit.TraitAttribute("Category", "group")]
        public void ManagerCreatesAGroupWithATeacherAndAddsAStudentAndTheStudentChecksForThePresenceOfAGroup()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "teacher",
                    "student",
                    "group"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager creates a group with a teacher and adds a student and the student checks " +
                    "for the presence of a group", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table23.AddRow(new string[] {
                            "Isabella",
                            "Abramson",
                            "string",
                            "isi@gmail.com",
                            "Bella",
                            "11345578",
                            "SaintPetersburg",
                            "22.05.2001",
                            "string",
                            "89514551247",
                            "Student"});
                table23.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
#line 7
testRunner.Given("Register new users with roles", ((string)(null)), table23, "Given ");
#line hidden
#line 11
testRunner.When("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table24.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 12
testRunner.And("Authorize user in service as manager", ((string)(null)), table24, "And ");
#line hidden
#line 15
testRunner.When("Click button create group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName",
                            "CourseName",
                            "FullNameOfTeacher",
                            "FullNameOfTutor"});
                table25.AddRow(new string[] {
                            "BaseSPb",
                            "Базовый C#",
                            "Maksim Karbainov",
                            ""});
#line 16
testRunner.And("Fills in group data", ((string)(null)), table25, "And ");
#line hidden
#line 19
testRunner.And("Click button saves group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
testRunner.And("Click button students list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
testRunner.And("Additing student \"Isabella Abramson\" to group \"BaseSPb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
testRunner.And("Manager logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table26.AddRow(new string[] {
                            "isi@gmail.com",
                            "11345578"});
#line 23
testRunner.And("Authorize user in service as student", ((string)(null)), table26, "And ");
#line hidden
#line 26
testRunner.And("Click button lessons as student", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 27
testRunner.Then("Student checks presence of group by name course \"Базовый C#\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager creates a group with the teacher and the teacher checks the presence of t" +
            "he group")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "Manager creates a group with the teacher and the teacher checks the presence of t" +
            "he group")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "teacher")]
        [Xunit.TraitAttribute("Category", "group")]
        public void ManagerCreatesAGroupWithTheTeacherAndTheTeacherChecksThePresenceOfTheGroup()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "teacher",
                    "group"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager creates a group with the teacher and the teacher checks the presence of t" +
                    "he group", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 30
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table27.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
#line 31
testRunner.Given("Register new users with roles", ((string)(null)), table27, "Given ");
#line hidden
#line 34
testRunner.When("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table28.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 35
testRunner.And("Authorize user in service as manager", ((string)(null)), table28, "And ");
#line hidden
#line 38
testRunner.When("Click button create group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName",
                            "CourseName",
                            "FullNameOfTeacher",
                            "FullNameOfTutor"});
                table29.AddRow(new string[] {
                            "BaseSPb",
                            "Базовый C#",
                            "Maksim Karbainov",
                            ""});
#line 39
testRunner.And("Fills in group data", ((string)(null)), table29, "And ");
#line hidden
#line 42
testRunner.And("Click button saves group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
testRunner.And("Manager logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table30.AddRow(new string[] {
                            "maks@gmail.com",
                            "22345678"});
#line 44
testRunner.And("Authorize user in service as teacher", ((string)(null)), table30, "And ");
#line hidden
#line 47
testRunner.And("Click button lessons as teacher", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
testRunner.Then("Teacher checks presence of group by name course \"Базовый C#\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager creates a group with a teacher and a tutor and the tutor checks the prese" +
            "nce of the group")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "Manager creates a group with a teacher and a tutor and the tutor checks the prese" +
            "nce of the group")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "teacher")]
        [Xunit.TraitAttribute("Category", "tutor")]
        [Xunit.TraitAttribute("Category", "group")]
        public void ManagerCreatesAGroupWithATeacherAndATutorAndTheTutorChecksThePresenceOfTheGroup()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "teacher",
                    "tutor",
                    "group"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager creates a group with a teacher and a tutor and the tutor checks the prese" +
                    "nce of the group", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 51
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table31.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
                table31.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148",
                            "Tutor"});
#line 52
testRunner.Given("Register new users with roles", ((string)(null)), table31, "Given ");
#line hidden
#line 56
testRunner.When("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table32.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 57
testRunner.And("Authorize user in service as manager", ((string)(null)), table32, "And ");
#line hidden
#line 60
testRunner.When("Click button create group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName",
                            "CourseName",
                            "FullNameOfTeacher",
                            "FullNameOfTutor"});
                table33.AddRow(new string[] {
                            "BaseSPb",
                            "Базовый C#",
                            "Maksim Karbainov",
                            "Elisey Kakoyto"});
#line 61
testRunner.And("Fills in group data", ((string)(null)), table33, "And ");
#line hidden
#line 64
testRunner.And("Click button saves group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
testRunner.And("Manager logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table34.AddRow(new string[] {
                            "elisey@gmail.com",
                            "13345678"});
#line 66
testRunner.And("Authorize user in service as tutor", ((string)(null)), table34, "And ");
#line hidden
#line 69
testRunner.And("Click button lessons as tutor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 70
testRunner.Then("Tutor checks presence of group by name course \"Базовый C#\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager cancel creation of group")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "Manager cancel creation of group")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "group")]
        public void ManagerCancelCreationOfGroup()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "group"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager cancel creation of group", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 73
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table35.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
                table35.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148",
                            "Tutor"});
#line 74
testRunner.Given("Register new users with roles", ((string)(null)), table35, "Given ");
#line hidden
#line 78
testRunner.When("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table36.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 79
testRunner.And("Authorize user in service as manager", ((string)(null)), table36, "And ");
#line hidden
#line 82
testRunner.When("Click button create group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName",
                            "CourseName",
                            "FullNameOfTeacher",
                            "FullNameOfTutor"});
                table37.AddRow(new string[] {
                            "Some group",
                            "Базовый C#",
                            "Maksim Karbainov",
                            "Elisey Kakoyto"});
#line 83
testRunner.And("Fills in group data", ((string)(null)), table37, "And ");
#line hidden
#line 86
testRunner.And("Click button cancels creation of group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
testRunner.And("Click button groups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
testRunner.Then("Manager should not find group \"Some group\" in list groups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager creates a group, fills it with users. Manager changes the composition of " +
            "the group. Manager sees that the composition of the group has changed")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "Manager creates a group, fills it with users. Manager changes the composition of " +
            "the group. Manager sees that the composition of the group has changed")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "teacher")]
        [Xunit.TraitAttribute("Category", "tutor")]
        [Xunit.TraitAttribute("Category", "student")]
        [Xunit.TraitAttribute("Category", "group")]
        [Xunit.TraitAttribute("Category", "editing")]
        public void ManagerCreatesAGroupFillsItWithUsers_ManagerChangesTheCompositionOfTheGroup_ManagerSeesThatTheCompositionOfTheGroupHasChanged()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "teacher",
                    "tutor",
                    "student",
                    "group",
                    "editing"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager creates a group, fills it with users. Manager changes the composition of " +
                    "the group. Manager sees that the composition of the group has changed", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 91
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table38.AddRow(new string[] {
                            "Isabella",
                            "Abramson",
                            "string",
                            "isi@gmail.com",
                            "Bella",
                            "11345578",
                            "SaintPetersburg",
                            "22.05.2001",
                            "string",
                            "89514551247",
                            "Student"});
                table38.AddRow(new string[] {
                            "Daniela",
                            "Watson",
                            "string",
                            "neli@gmail.com",
                            "Neli",
                            "11333578",
                            "SaintPetersburg",
                            "14.01.2001",
                            "string",
                            "89517751247",
                            "Student"});
                table38.AddRow(new string[] {
                            "Anton",
                            "Efremenkov",
                            "string",
                            "anton@gmail.com",
                            "Anton",
                            "22111678",
                            "SaintPetersburg",
                            "22.07.1988",
                            "string",
                            "89521477531",
                            "Teacher"});
                table38.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
                table38.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148",
                            "Tutor"});
                table38.AddRow(new string[] {
                            "Misha",
                            "Mersa",
                            "string",
                            "mi@gmail.com",
                            "Misha",
                            "13300178",
                            "SaintPetersburg",
                            "12.12.1997",
                            "string",
                            "89584763148",
                            "Tutor"});
#line 92
testRunner.Given("Register new users with roles", ((string)(null)), table38, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "CourseName",
                            "GroupStatusId",
                            "StartDate",
                            "EndDate",
                            "Timetable",
                            "PaymentPerMonth",
                            "PaymentsCount"});
                table39.AddRow(new string[] {
                            "BaseSPb",
                            "Базовый C#",
                            "Forming",
                            "29.09.2022",
                            "25.01.2023",
                            "string",
                            "2500",
                            "3"});
#line 100
testRunner.And("Create new groups", ((string)(null)), table39, "And ");
#line hidden
                TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table40.AddRow(new string[] {
                            "Isabella",
                            "Abramson",
                            "string",
                            "isi@gmail.com",
                            "Bella",
                            "11345578",
                            "SaintPetersburg",
                            "22.05.2001",
                            "string",
                            "89514551247",
                            "Student"});
                table40.AddRow(new string[] {
                            "Daniela",
                            "Watson",
                            "string",
                            "neli@gmail.com",
                            "Neli",
                            "11333578",
                            "SaintPetersburg",
                            "14.01.2001",
                            "string",
                            "89517751247",
                            "Student"});
                table40.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
                table40.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148",
                            "Tutor"});
#line 103
testRunner.And("Add users to group \"BaseSPb\"", ((string)(null)), table40, "And ");
#line hidden
#line 109
testRunner.When("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table41.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 110
testRunner.And("Authorize user in service as manager", ((string)(null)), table41, "And ");
#line hidden
#line 113
testRunner.When("Click button groups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 114
testRunner.And("Click button group with name \"BaseSPb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 115
testRunner.And("Click button edit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName",
                            "CourseName",
                            "FullNameOfTeacher",
                            "FullNameOfTutor"});
                table42.AddRow(new string[] {
                            "BaseSPb",
                            "Базовый C#",
                            "Anton Efremenkov",
                            "Misha Mersa"});
#line 116
testRunner.And("Fills in edit group data", ((string)(null)), table42, "And ");
#line hidden
#line 119
testRunner.And("Click button saves edit group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 120
testRunner.And("Click button groups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 121
testRunner.And("Click button group with name \"BaseSPb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 122
testRunner.Then("Should be a teacher in group \"Anton Efremenkov\" and should not be a teacher \"Maks" +
                        "im Karbainov\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 123
testRunner.And("Should be a tutor in group \"Misha Mersa\" and should not be a tutor \"Elisey Kakoyt" +
                        "o\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager creates a group together with the teacher. Manager changes the name of th" +
            "e group and the course. Manager and teacher see that the name of the group and t" +
            "he course have changed")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "Manager creates a group together with the teacher. Manager changes the name of th" +
            "e group and the course. Manager and teacher see that the name of the group and t" +
            "he course have changed")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "teacher")]
        [Xunit.TraitAttribute("Category", "group")]
        [Xunit.TraitAttribute("Category", "editing")]
        public void ManagerCreatesAGroupTogetherWithTheTeacher_ManagerChangesTheNameOfTheGroupAndTheCourse_ManagerAndTeacherSeeThatTheNameOfTheGroupAndTheCourseHaveChanged()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "teacher",
                    "group",
                    "editing"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager creates a group together with the teacher. Manager changes the name of th" +
                    "e group and the course. Manager and teacher see that the name of the group and t" +
                    "he course have changed", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 126
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table43.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
#line 127
testRunner.Given("Register new users with roles", ((string)(null)), table43, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "CourseName",
                            "GroupStatusId",
                            "StartDate",
                            "EndDate",
                            "Timetable",
                            "PaymentPerMonth",
                            "PaymentsCount"});
                table44.AddRow(new string[] {
                            "BaseSPb",
                            "Базовый C#",
                            "Forming",
                            "29.09.2022",
                            "25.01.2023",
                            "string",
                            "2500",
                            "3"});
#line 130
testRunner.And("Create new groups", ((string)(null)), table44, "And ");
#line hidden
                TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table45.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
#line 133
testRunner.And("Add users to group \"BaseSPb\"", ((string)(null)), table45, "And ");
#line hidden
#line 136
testRunner.When("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table46.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 137
testRunner.And("Authorize user in service as manager", ((string)(null)), table46, "And ");
#line hidden
#line 140
testRunner.When("Click button groups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 141
testRunner.And("Click button group with name \"BaseSPb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 142
testRunner.And("Click button edit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName",
                            "CourseName",
                            "FullNameOfTeacher",
                            "FullNameOfTutor"});
                table47.AddRow(new string[] {
                            "QASPb",
                            "QA Automation",
                            "Maksim Karbainov",
                            ""});
#line 143
testRunner.And("Fills in edit group data", ((string)(null)), table47, "And ");
#line hidden
#line 146
testRunner.And("Click button saves edit group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 147
testRunner.And("Click button groups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 148
testRunner.Then("Manager should find group \"QASPb\" in list groups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 149
testRunner.When("Manager logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table48.AddRow(new string[] {
                            "maks@gmail.com",
                            "22345678"});
#line 150
testRunner.And("Authorize user in service as teacher", ((string)(null)), table48, "And ");
#line hidden
#line 153
testRunner.And("Click button lessons as teacher", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 154
testRunner.Then("Teacher checks presence of group by name course \"QA Automation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager creates a group, edits the group and cancels editing")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "Manager creates a group, edits the group and cancels editing")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "teacher")]
        [Xunit.TraitAttribute("Category", "group")]
        [Xunit.TraitAttribute("Category", "editing")]
        public void ManagerCreatesAGroupEditsTheGroupAndCancelsEditing()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "teacher",
                    "group",
                    "editing"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager creates a group, edits the group and cancels editing", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 157
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table49.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
#line 158
testRunner.Given("Register new users with roles", ((string)(null)), table49, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "CourseName",
                            "GroupStatusId",
                            "StartDate",
                            "EndDate",
                            "Timetable",
                            "PaymentPerMonth",
                            "PaymentsCount"});
                table50.AddRow(new string[] {
                            "BaseSPb",
                            "Базовый C#",
                            "Forming",
                            "29.09.2022",
                            "25.01.2023",
                            "string",
                            "2500",
                            "3"});
#line 161
testRunner.And("Create new groups", ((string)(null)), table50, "And ");
#line hidden
                TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table51.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
#line 164
testRunner.And("Add users to group \"BaseSPb\"", ((string)(null)), table51, "And ");
#line hidden
#line 167
testRunner.And("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table52.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 168
testRunner.And("Authorize user in service", ((string)(null)), table52, "And ");
#line hidden
#line 171
testRunner.When("Click button groups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 172
testRunner.And("Click button group with name \"BaseSPb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 173
testRunner.And("Click button edit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName",
                            "CourseName",
                            "FullNameOfTeacher",
                            "FullNameOfTutor"});
                table53.AddRow(new string[] {
                            "QASPb",
                            "QA Automation",
                            "Maksim Karbainov",
                            ""});
#line 174
testRunner.And("Fills in edit group data", ((string)(null)), table53, "And ");
#line hidden
#line 177
testRunner.And("Click button cancels editing of group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 178
testRunner.And("Click button groups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 179
testRunner.Then("Manager should find group \"BaseSPb\" in list groups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager creates a group without a name negative test")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "Manager creates a group without a name negative test")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "group")]
        [Xunit.TraitAttribute("Category", "negative")]
        public void ManagerCreatesAGroupWithoutANameNegativeTest()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "group",
                    "negative"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager creates a group without a name negative test", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 182
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table54.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
                table54.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148",
                            "Tutor"});
#line 183
testRunner.Given("Register new users with roles", ((string)(null)), table54, "Given ");
#line hidden
#line 187
testRunner.When("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table55.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 188
testRunner.And("Authorize user in service as manager", ((string)(null)), table55, "And ");
#line hidden
#line 191
testRunner.When("Click button create group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName",
                            "CourseName",
                            "FullNameOfTeacher",
                            "FullNameOfTutor"});
                table56.AddRow(new string[] {
                            "",
                            "Базовый C#",
                            "Maksim Karbainov",
                            "Elisey Kakoyto"});
#line 192
testRunner.And("Fills in group data", ((string)(null)), table56, "And ");
#line hidden
#line 195
testRunner.And("Click button saves group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 196
testRunner.Then("Error message about absence of a group name, when creating a group should be \"Вы " +
                        "не указали название\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager creates a group without choosing a course negative test")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "Manager creates a group without choosing a course negative test")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "group")]
        [Xunit.TraitAttribute("Category", "negative")]
        public void ManagerCreatesAGroupWithoutChoosingACourseNegativeTest()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "group",
                    "negative"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager creates a group without choosing a course negative test", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 199
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table57.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
                table57.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148",
                            "Tutor"});
#line 200
testRunner.Given("Register new users with roles", ((string)(null)), table57, "Given ");
#line hidden
#line 204
testRunner.When("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table58.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 205
testRunner.And("Authorize user in service as manager", ((string)(null)), table58, "And ");
#line hidden
#line 208
testRunner.When("Click button create group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName",
                            "CourseName",
                            "FullNameOfTeacher",
                            "FullNameOfTutor"});
                table59.AddRow(new string[] {
                            "BaseSPb",
                            "",
                            "Maksim Karbainov",
                            "Elisey Kakoyto"});
#line 209
testRunner.And("Fills in group data", ((string)(null)), table59, "And ");
#line hidden
#line 212
testRunner.And("Click button saves group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 213
testRunner.Then("Error message about lack of course selection, when creating a group should be \"Вы" +
                        " не выбрали курс\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager creates a group without choosing a teacher negative test")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "Manager creates a group without choosing a teacher negative test")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "group")]
        [Xunit.TraitAttribute("Category", "negative")]
        public void ManagerCreatesAGroupWithoutChoosingATeacherNegativeTest()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "group",
                    "negative"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager creates a group without choosing a teacher negative test", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 216
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table60.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
                table60.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148",
                            "Tutor"});
#line 217
testRunner.Given("Register new users with roles", ((string)(null)), table60, "Given ");
#line hidden
#line 221
testRunner.When("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table61.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 222
testRunner.And("Authorize user in service as manager", ((string)(null)), table61, "And ");
#line hidden
#line 225
testRunner.When("Click button create group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName",
                            "CourseName",
                            "FullNameOfTeacher",
                            "FullNameOfTutor"});
                table62.AddRow(new string[] {
                            "BaseSPb",
                            "Базовый C#",
                            "",
                            "Elisey Kakoyto"});
#line 226
testRunner.And("Fills in group data", ((string)(null)), table62, "And ");
#line hidden
#line 229
testRunner.And("Click button saves group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 230
testRunner.Then("Error message about lack of teacher selection, when creating a group should be \"В" +
                        "ы не выбрали преподавателя\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager creates a group, edits a group without a name negative test")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "Manager creates a group, edits a group without a name negative test")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "group")]
        [Xunit.TraitAttribute("Category", "editing")]
        [Xunit.TraitAttribute("Category", "negative")]
        public void ManagerCreatesAGroupEditsAGroupWithoutANameNegativeTest()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "group",
                    "editing",
                    "negative"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager creates a group, edits a group without a name negative test", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 233
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table63.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
                table63.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148",
                            "Tutor"});
#line 234
testRunner.Given("Register new users with roles", ((string)(null)), table63, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "CourseName",
                            "GroupStatusId",
                            "StartDate",
                            "EndDate",
                            "Timetable",
                            "PaymentPerMonth",
                            "PaymentsCount"});
                table64.AddRow(new string[] {
                            "BaseSPb",
                            "Базовый C#",
                            "Forming",
                            "29.09.2022",
                            "25.01.2023",
                            "string",
                            "2500",
                            "3"});
#line 238
testRunner.And("Create new groups", ((string)(null)), table64, "And ");
#line hidden
                TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table65.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
                table65.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148",
                            "Tutor"});
#line 241
testRunner.And("Add users to group \"BaseSPb\"", ((string)(null)), table65, "And ");
#line hidden
#line 245
testRunner.When("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table66.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 246
testRunner.And("Authorize user in service as manager", ((string)(null)), table66, "And ");
#line hidden
#line 249
testRunner.When("Click button groups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 250
testRunner.And("Click button group with name \"BaseSPb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 251
testRunner.And("Click button edit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName",
                            "CourseName",
                            "FullNameOfTeacher",
                            "FullNameOfTutor"});
                table67.AddRow(new string[] {
                            "",
                            "Базовый C#",
                            "Maksim Karbainov",
                            "Elisey Kakoyto"});
#line 252
testRunner.And("Fills in group data", ((string)(null)), table67, "And ");
#line hidden
#line 255
testRunner.And("Click button saves edit group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 256
testRunner.Then("Error message about absence of group name, when editing group should be \"Вы не ук" +
                        "азали название\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager creates a group, edits the group without choosing a course negative test")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "Manager creates a group, edits the group without choosing a course negative test")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "group")]
        [Xunit.TraitAttribute("Category", "editing")]
        [Xunit.TraitAttribute("Category", "negative")]
        public void ManagerCreatesAGroupEditsTheGroupWithoutChoosingACourseNegativeTest()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "group",
                    "editing",
                    "negative"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager creates a group, edits the group without choosing a course negative test", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 259
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table68.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
                table68.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148",
                            "Tutor"});
#line 260
testRunner.Given("Register new users with roles", ((string)(null)), table68, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "CourseName",
                            "GroupStatusId",
                            "StartDate",
                            "EndDate",
                            "Timetable",
                            "PaymentPerMonth",
                            "PaymentsCount"});
                table69.AddRow(new string[] {
                            "BaseSPb",
                            "Базовый C#",
                            "Forming",
                            "29.09.2022",
                            "25.01.2023",
                            "string",
                            "2500",
                            "3"});
#line 264
testRunner.And("Create new groups", ((string)(null)), table69, "And ");
#line hidden
                TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table70.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
                table70.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148",
                            "Tutor"});
#line 267
testRunner.And("Add users to group \"BaseSPb\"", ((string)(null)), table70, "And ");
#line hidden
#line 271
testRunner.When("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table71.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 272
testRunner.And("Authorize user in service as manager", ((string)(null)), table71, "And ");
#line hidden
#line 275
testRunner.When("Click button groups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 276
testRunner.And("Click button group with name \"BaseSPb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 277
testRunner.And("Click button edit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName",
                            "CourseName",
                            "FullNameOfTeacher",
                            "FullNameOfTutor"});
                table72.AddRow(new string[] {
                            "BaseSPb",
                            "",
                            "Maksim Karbainov",
                            "Elisey Kakoyto"});
#line 278
testRunner.And("Fills in group data", ((string)(null)), table72, "And ");
#line hidden
#line 281
testRunner.And("Click button saves edit group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 282
testRunner.Then("Error message about lack of course selection, when editing group should be \"Вы не" +
                        " выбрали курс\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager creates a group, edits the group without choosing a teacher negative test" +
            "")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "Manager creates a group, edits the group without choosing a teacher negative test" +
            "")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "group")]
        [Xunit.TraitAttribute("Category", "editing")]
        [Xunit.TraitAttribute("Category", "negative")]
        public void ManagerCreatesAGroupEditsTheGroupWithoutChoosingATeacherNegativeTest()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "group",
                    "editing",
                    "negative"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager creates a group, edits the group without choosing a teacher negative test" +
                    "", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 285
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table73.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
                table73.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148",
                            "Tutor"});
#line 286
testRunner.Given("Register new users with roles", ((string)(null)), table73, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "CourseName",
                            "GroupStatusId",
                            "StartDate",
                            "EndDate",
                            "Timetable",
                            "PaymentPerMonth",
                            "PaymentsCount"});
                table74.AddRow(new string[] {
                            "BaseSPb",
                            "Базовый C#",
                            "Forming",
                            "29.09.2022",
                            "25.01.2023",
                            "string",
                            "2500",
                            "3"});
#line 290
testRunner.And("Create new groups", ((string)(null)), table74, "And ");
#line hidden
                TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table75.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Teacher"});
                table75.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148",
                            "Tutor"});
#line 293
testRunner.And("Add users to group \"BaseSPb\"", ((string)(null)), table75, "And ");
#line hidden
#line 297
testRunner.When("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table76.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 298
testRunner.And("Authorize user in service as manager", ((string)(null)), table76, "And ");
#line hidden
#line 301
testRunner.When("Click button groups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 302
testRunner.And("Click button group with name \"BaseSPb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 303
testRunner.And("Click button edit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName",
                            "CourseName",
                            "FullNameOfTeacher",
                            "FullNameOfTutor"});
                table77.AddRow(new string[] {
                            "BaseSPb",
                            "Базовый C#",
                            "",
                            "Elisey Kakoyto"});
#line 304
testRunner.And("Fills in group data", ((string)(null)), table77, "And ");
#line hidden
#line 307
testRunner.And("Click button saves edit group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 308
testRunner.Then("Error message about lack of teacher selection, when editing group should be \"Вы н" +
                        "е выбрали преподавателя\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="The group completed the basic course and moved on to the next one. The student se" +
            "es the history of his courses.")]
        [Xunit.TraitAttribute("FeatureTitle", "Groups")]
        [Xunit.TraitAttribute("Description", "The group completed the basic course and moved on to the next one. The student se" +
            "es the history of his courses.")]
        [Xunit.TraitAttribute("Category", "group")]
        [Xunit.TraitAttribute("Category", "student")]
        public void TheGroupCompletedTheBasicCourseAndMovedOnToTheNextOne_TheStudentSeesTheHistoryOfHisCourses_()
        {
            string[] tagsOfScenario = new string[] {
                    "group",
                    "student"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The group completed the basic course and moved on to the next one. The student se" +
                    "es the history of his courses.", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 311
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber",
                            "Role"});
                table78.AddRow(new string[] {
                            "Вася",
                            "Ложкин",
                            "Вилкович",
                            "vasyok@dev.com",
                            "Lojka",
                            "password",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531",
                            "Student"});
#line 312
 testRunner.Given("Register new users with roles", ((string)(null)), table78, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "CourseName",
                            "GroupStatusId",
                            "StartDate",
                            "EndDate",
                            "Timetable",
                            "PaymentPerMonth",
                            "PaymentsCount"});
                table79.AddRow(new string[] {
                            "Navigators",
                            "Базовый C#",
                            "Completed",
                            "21.02.2022",
                            "30.05.2022",
                            "string",
                            "2500",
                            "3"});
                table79.AddRow(new string[] {
                            "Winners",
                            "QA Automation",
                            "Forming",
                            "21.06.2022",
                            "10.10.2022",
                            "string",
                            "7500",
                            "3"});
#line 315
 testRunner.And("Create new groups", ((string)(null)), table79, "And ");
#line hidden
                TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Role"});
                table80.AddRow(new string[] {
                            "Вася",
                            "Ложкин",
                            "Student"});
#line 319
 testRunner.And("Add users to group \"Navigators\"", ((string)(null)), table80, "And ");
#line hidden
                TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Role"});
                table81.AddRow(new string[] {
                            "Вася",
                            "Ложкин",
                            "Student"});
#line 322
 testRunner.And("Add users to group \"Winners\"", ((string)(null)), table81, "And ");
#line hidden
#line 325
 testRunner.And("Open DevEdu web site https://piter-education.ru:7074/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table82.AddRow(new string[] {
                            "vasyok@dev.com",
                            "password"});
#line 326
 testRunner.When("Authorize user in service as student", ((string)(null)), table82, "When ");
#line hidden
#line 329
 testRunner.And("Click button lessons as student", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 330
 testRunner.Then("Student checks presence of group by name course \"Базовый C#\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 331
 testRunner.And("Student checks presence of group by name course \"QA Automation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                GroupsFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                GroupsFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
