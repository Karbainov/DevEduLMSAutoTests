// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DevEduMLSAutoTests.Api.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ManagerCreatesAGroupAddsUsersFeature : object, Xunit.IClassFixture<ManagerCreatesAGroupAddsUsersFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "ManagerCreatesAGroupAddsUsers.feature"
#line hidden
        
        public ManagerCreatesAGroupAddsUsersFeature(ManagerCreatesAGroupAddsUsersFeature.FixtureData fixtureData, DevEduMLSAutoTests_Api_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "ManagerCreatesAGroupAddsUsers", "A short summary of the feature", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Manager creates a group adds students and appoints a teacher and tutor")]
        [Xunit.TraitAttribute("FeatureTitle", "ManagerCreatesAGroupAddsUsers")]
        [Xunit.TraitAttribute("Description", "Manager creates a group adds students and appoints a teacher and tutor")]
        [Xunit.TraitAttribute("Category", "manager")]
        [Xunit.TraitAttribute("Category", "teacher")]
        [Xunit.TraitAttribute("Category", "tutor")]
        [Xunit.TraitAttribute("Category", "student")]
        public virtual void ManagerCreatesAGroupAddsStudentsAndAppointsATeacherAndTutor()
        {
            string[] tagsOfScenario = new string[] {
                    "manager",
                    "teacher",
                    "tutor",
                    "student"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manager creates a group adds students and appoints a teacher and tutor", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber"});
                table1.AddRow(new string[] {
                            "Gabriel",
                            "Wilson",
                            "string",
                            "wl@gmail.com",
                            "Gabi",
                            "11345678",
                            "SaintPetersburg",
                            "15.04.1999",
                            "string",
                            "89514781247"});
                table1.AddRow(new string[] {
                            "Isabella",
                            "Abramson",
                            "string",
                            "isi@gmail.com",
                            "Bella",
                            "11345578",
                            "SaintPetersburg",
                            "22.05.2001",
                            "string",
                            "89514551247"});
                table1.AddRow(new string[] {
                            "Sophie",
                            "Anderson",
                            "string",
                            "sophie@gmail.com",
                            "Sophi",
                            "11344678",
                            "SaintPetersburg",
                            "18.01.1998",
                            "string",
                            "89511781247"});
#line 7
testRunner.Given("register new students in service", ((string)(null)), table1, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber"});
                table2.AddRow(new string[] {
                            "Maksim",
                            "Karbainov",
                            "string",
                            "maks@gmail.com",
                            "Maksim",
                            "22345678",
                            "SaintPetersburg",
                            "18.05.1995",
                            "string",
                            "89521496531"});
                table2.AddRow(new string[] {
                            "Anton",
                            "Efremenkov",
                            "string",
                            "anton@gmail.com",
                            "Anton",
                            "22345698",
                            "SaintPetersburg",
                            "22.08.1988",
                            "string",
                            "89521477531"});
#line 12
testRunner.And("register new teachers in service", ((string)(null)), table2, "And ");
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Patronymic",
                            "Email",
                            "Username",
                            "Password",
                            "City",
                            "BirthDate",
                            "GitHubAccount",
                            "PhoneNumber"});
                table3.AddRow(new string[] {
                            "Elisey",
                            "Kakoyto",
                            "string",
                            "elisey@gmail.com",
                            "Elisey",
                            "13345678",
                            "SaintPetersburg",
                            "07.10.1996",
                            "string",
                            "89518963148"});
#line 16
testRunner.And("register new tutors in service", ((string)(null)), table3, "And ");
#line hidden
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table4.AddRow(new string[] {
                            "marina@example.com",
                            "marinamarina"});
#line 19
testRunner.And("authorize manager in servise", ((string)(null)), table4, "And ");
#line hidden
#line 22
testRunner.And("manager add roles to users in service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "CourseId",
                            "GroupStatusId",
                            "StartDate",
                            "EndDate",
                            "Timetable",
                            "PaymentPerMonth",
                            "PaymentsCount"});
                table5.AddRow(new string[] {
                            "BaseSPb",
                            "1370",
                            "Forming",
                            "29.09.2022",
                            "25.01.2023",
                            "string",
                            "2500",
                            "3"});
#line 23
testRunner.When("manager create new group in service", ((string)(null)), table5, "When ");
#line hidden
#line 26
testRunner.And("manager add users to group in service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table6.AddRow(new string[] {
                            "wl@gmail.com",
                            "11345678"});
                table6.AddRow(new string[] {
                            "isi@gmail.com",
                            "11345578"});
                table6.AddRow(new string[] {
                            "sophie@gmail.com",
                            "11344678"});
                table6.AddRow(new string[] {
                            "maks@gmail.com",
                            "22345678"});
                table6.AddRow(new string[] {
                            "anton@gmail.com",
                            "22345698"});
                table6.AddRow(new string[] {
                            "elisey@gmail.com",
                            "13345678"});
#line 27
testRunner.Then("authorize users in service", ((string)(null)), table6, "Then ");
#line hidden
#line 35
testRunner.And("check the user\'s group in service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ManagerCreatesAGroupAddsUsersFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ManagerCreatesAGroupAddsUsersFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
